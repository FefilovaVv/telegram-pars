#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ Telegram Parser —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
"""
import asyncio
from telegram_parser import TelegramParser

async def main():
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä
    parser = TelegramParser()
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∞–∫–∫–∞—É–Ω—Ç–∞
        await parser.initialize()
        
        print("\n" + "="*60)
        print("–í–´–ë–ï–†–ò–¢–ï –†–ï–ñ–ò–ú –ü–ê–†–°–ò–ù–ì–ê:")
        print("="*60)
        print("1. –£–º–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ (–ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —É–∂–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–∞—Ç—ã)")
        print("2. –ü–æ–ª–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–∞—Ä—Å–∏—Ç –≤—Å–µ)")
        print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π (—Ç–æ–ª—å–∫–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ)")
        print("4. –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        print("5. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5): ").strip()
        
        if choice == "1":
            print("\nüß† –ó–∞–ø—É—Å–∫–∞–µ–º —É–º–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥...")
            result = await parser.parse_all_chats(force_full_scan=False)
            
            print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–º–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞:")
            print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —á–∞—Ç–æ–≤: {result['parsing_statistics']['chats_parsed']}")
            print(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ —á–∞—Ç–æ–≤: {result['parsing_statistics']['chats_skipped']}")
            print(f"üí¨ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {result['parsing_statistics']['total_messages']}")
            
        elif choice == "2":
            print("\nüîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥...")
            result = await parser.parse_all_chats(force_full_scan=True)
            
            print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞:")
            print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —á–∞—Ç–æ–≤: {result['parsing_statistics']['chats_parsed']}")
            print(f"üí¨ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {result['parsing_statistics']['total_messages']}")
            
        elif choice == "3":
            print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è...")
            hours = input("–ó–∞ —Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å? (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 24): ").strip()
            hours = int(hours) if hours.isdigit() else 24
            
            result = await parser.check_for_changes(hours_threshold=hours)
            
            if 'error' not in result:
                print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π:")
                print(f"üîÑ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ —á–∞—Ç–æ–≤: {result['chats_checked']}")
                print(f"üìù –ù–∞–π–¥–µ–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {result['total_changes']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {result['error']}")
                
        elif choice == "4":
            if parser.db:
                stats = parser.db.get_parsing_statistics()
                print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
                print(f"üìÅ –í—Å–µ–≥–æ —á–∞—Ç–æ–≤: {stats['total_statistics'].get('total_chats', 0)}")
                print(f"üí¨ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {stats['total_statistics'].get('total_messages', 0)}")
                print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {stats['total_statistics'].get('deleted_messages', 0)}")
                
                print(f"\nüìà –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–µ—Å—Å–∏–∏:")
                for session in stats['recent_sessions'][:3]:
                    print(f"  {session.get('start_time', 'N/A')}: {session.get('total_messages', 0)} —Å–æ–æ–±—â–µ–Ω–∏–π")
            else:
                print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–∫–ª—é—á–µ–Ω–∞")
                
        elif choice == "5":
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
    
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        await parser.close()

if __name__ == "__main__":
    asyncio.run(main())